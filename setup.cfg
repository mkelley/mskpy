[metadata]
name = mskpy
author = Michael S. P. Kelley
author_email = msk@astro.umd.edu
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/mkelley/mskpy
description = "MSK's personal Python library, mostly for astronomy work."
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = mkelley/mskpy

[options]
zip_safe = False
include_package_data = True
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    astropy
    astropy-samp-ds9
    numpy
    sbpy
    spiceypy>=1.1
    scipy
    synphot>=1.0
    photutils
    pytz
scripts =
    scripts/ephemeris
    scripts/transit
    scripts/comet-fest
    scripts/center-target
    scripts/H2D
    scripts/ds9-ext
    scripts/ads

[options.entry_points]
console_scripts =
    astropy-package-template-example = packagename.example_mod:main

[options.extras_require]
test =
    pytest-astropy
docs =
    sphinx-astropy

[options.package_data]
mskpy = data/*,data/filters/*/*,models/psg/test/psg_cfg.txt


[tool:pytest]
testpaths = "mskpy" "docs"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst

[coverage:run]
omit =
    mskpy/_astropy_init*
    mskpy/conftest.py
    mskpy/*setup_package*
    mskpy/tests/*
    mskpy/*/tests/*
    mskpy/extern/*
    mskpy/version*
    */mskpy/_astropy_init*
    */mskpy/conftest.py
    */mskpy/*setup_package*
    */mskpy/tests/*
    */mskpy/*/tests/*
    */mskpy/extern/*
    */mskpy/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
